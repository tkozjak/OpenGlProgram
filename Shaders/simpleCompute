#version 440 compatibility

layout(local_size_x = 32, local_size_y = 1) in;

layout(rgba32f, binding = 0) uniform image2D img_output;

shared uint num_invocations;

void main() {


  num_invocations=0;
  barrier();

  // base pixel colour for image
  vec4 pixel = vec4(0.0, 0.0, 0.0, 1.0);

// get index in global work group i.e x,y position
  ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
  ivec2 local_coordinates = ivec2(gl_LocalInvocationID.xy);

  int lim = 16;

  // paint pixels
  if( local_coordinates.x < lim )
    pixel.x = 1.0;
  else if ( local_coordinates.x >= lim )
    pixel.y = 1.0;
  else
    pixel.z = 1.0;


  if( gl_LocalInvocationIndex == 11 )
    num_invocations = gl_LocalInvocationIndex;
  memoryBarrier();


  // output to a specific pixel in the image
  imageStore(img_output, pixel_coords, vec4(pixel.xyz, num_invocations));
}
