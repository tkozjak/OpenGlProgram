#version 440 compatibility

layout( std430, binding=4 ) buffer Pos
{
    vec4  Positions[];
};

layout( std430, binding=5 ) buffer Vel
{
    vec4  Velocities[];
};
layout( std430, binding=6 ) buffer Col
{
    vec4  Colors[];
};

layout( local_size_x = 32,  local_size_y = 1, local_size_z = 1 )   in;

const vec3 G = vec3( 0.0, -9.8, 0.0 );
const float DT = 0.010;

const vec3 groundPlane = vec3( 0.0, -2.0, 0.0 );

const float dumpFactor = 0.0;

bool IsBelowSurface( vec3 position, vec3 surface ){
    if( surface.y > position.y )
        return true;
     else
        return false;
}

vec3 BounceFromGround( vec3 velocity_in ){
    vec3 velocity_out = reflect( velocity_in, vec3( 0.0, 1.0, 0.0 ) );
    return velocity_out;
}

void main() {
    uint gid = gl_GlobalInvocationID.x;
    vec3 p = Positions[gid].xyz;
    vec3 v = Velocities[gid].xyz;

    vec3 pp = p + v*DT + 0.5*DT*DT*G;
    vec3 vp = v + G*DT;

    if( IsBelowSurface(pp, groundPlane)){
        vp = BounceFromGround( vp ) * dumpFactor;
        pp = p + v*DT + 0.5*DT*DT*G;
    }

    Positions[gid].xyz = pp;
    Velocities[gid].xyz = vp;


}
